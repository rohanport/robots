# Docker Compose file for robots mono-repo
#
# Usage:
#
# To build the images:
#   docker compose build
#
# To start up a specific service by name:
#   docker compose up <service_name>
#
# To open an interactive shell to a running container:
#   docker exec -it <container_name> bash

services:
  pub-sub:
    container_name: pub-sub
    image: robots:pub-sub
    build:
      context: .
      dockerfile: pub-sub/docker/Dockerfile
      target: pub-sub
    # Interactive shell
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    volumes:
      # Mount repository
      - .:/workspace:rw
    user: bun
    command: bash -c "bun install && bun run start-dev"

  pub-sub-dev:
    container_name: pub-sub-dev
    image: robots:pub-sub-dev
    extends: pub-sub
    build:
      context: .
      dockerfile: pub-sub/docker/Dockerfile
      target: dev
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USERNAME=${USERNAME}
    volumes:
      # Mount repository
      - .:/workspace:rw
      # Mount container commandhistory
      - ./.devcontainer/pub-sub/commandhistory:/commandhistory:rw
    user: ${USERNAME}
    command: sleep infinity

  # ROS Base image
  ros-base:
    container_name: ros-base
    image: robots:ros-base
    build:
      context: .
      dockerfile: ros/docker/Dockerfile
      args:
        - ROS_DISTRO=iron
        - GAZEBO_DISTRO=fortress
      target: base
    # Interactive shell
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    # Needed to display graphical applications
    privileged: True
    environment:
      # Allows graphical programs in the container.
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      # Allows graphical programs in the container.
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority

  # ROS Overlay image containing the source code.
  ros-overlay:
    container_name: ros-overlay
    extends: ros-base
    image: robots:ros-overlay
    build:
      context: .
      dockerfile: ros/docker/Dockerfile
      target: overlay
    command: sleep infinity

  # ROS Developer container
  ros-dev:
    container_name: ros-dev
    extends: ros-overlay
    image: robots:ros-dev
    build:
      context: .
      dockerfile: ros/docker/Dockerfile
      target: dev
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
        - USERNAME=${USERNAME:-ros-dev}
    volumes:
      # Mount repository
      - .:/workspace:rw
      # Mount robot modules to /overlay_ws
      - ./ros/custom_messages:/overlay_ws/src/custom_messages:rw
      - ./ros/pathfinder:/overlay_ws/src/pathfinder:rw
      - ./ros/wheely:/overlay_ws/src/wheely:rw
      # Mount container commandhistory
      - ./.devcontainer/ros/commandhistory:/commandhistory:rw
    user: ${USERNAME:-ros-dev}
    command: sleep infinity

  # RxInfer image
  rxinfer:
    container_name: rxinfer
    image: robots:rxinfer
    build:
      context: .
      dockerfile: rxinfer/docker/Dockerfile
      target: rxinfer
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
        - USERNAME=${USERNAME:-rxinfer}
    volumes:
      # Mount repository
      - .:/workspace:rw
      # Mount container commandhistory
      - ./.devcontainer/rxinfer/commandhistory:/commandhistory:rw
    user: ${USERNAME:-rxinfer}
    # Interactive shell
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    environment:
      PUB_SUB_URL: ws://127.0.0.1:3000
    command: sleep infinity

  # RxInfer Developer container
  rxinfer-pathfinder:
    container_name: rxinfer-pathfinder
    extends: rxinfer
    image: robots:rxinfer-pathfinder
    command: julia pathfinder/main.jl
    network_mode: host
    environment:
      PUB_SUB_URL: ws://127.0.0.1:3000

  # RxInfer Developer container
  rxinfer-wheely:
    container_name: rxinfer-wheely
    extends: rxinfer
    image: robots:rxinfer-wheely
    command: julia wheely/main.jl
    network_mode: host
    environment:
      PUB_SUB_URL: ws://127.0.0.1:3000

  dashboard:
    container_name: dashboard
    image: robots:dashboard
    build:
      context: .
      dockerfile: dashboard/docker/Dockerfile
      target: dashboard
    # Interactive shell
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    volumes:
      # Mount repository
      - .:/workspace:rw
    ulimits:
      memlock:
        soft: -1
        hard: -1
    user: bun
    command: bash -c "bun install && bun run --bun dev"
    environment:
      NEXT_PUBLIC_PUB_SUB_URL: ws://127.0.0.1:3000

  dashboard-dev:
    container_name: dashboard-dev
    image: robots:dashboard-dev
    extends: dashboard
    build:
      context: .
      dockerfile: dashboard/docker/Dockerfile
      target: dev
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USERNAME=${USERNAME}
    volumes:
      # Mount repository
      - .:/workspace:rw
      # Mount container commandhistory
      - ./.devcontainer/dashboard/commandhistory:/commandhistory:rw
    user: ${USERNAME}
    command: sleep infinity
