# Docker Compose file for robots mono-repo
#
# Usage:
#
# To build the images:
#   docker compose build
#
# To start up a specific service by name:
#   docker compose up <service_name>
#
# To open an interactive shell to a running container:
#   docker exec -it <container_name> bash

version: "3.9"
services:
  pub-sub:
    image: robots:pub-sub
    build:
      context: .
      dockerfile: docker/pub-sub/Dockerfile
      target: pub-sub
    # Interactive shell
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    volumes:
      # Mount the source code
      - ./pub-sub:/pub-sub:rw
    user: bun
    command: sleep infinity

  # ROS Base image
  ros_base:
    image: robots:ros_base
    build:
      context: .
      dockerfile: docker/ros/Dockerfile
      args:
        ROS_DISTRO: humble
      target: base
    # Interactive shell
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    # Needed to display graphical applications
    privileged: True
    environment:
      # Allows graphical programs in the container.
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      # Allows graphical programs in the container.
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority

  # ROS Overlay image containing the source code.
  ros_overlay:
    extends: ros_base
    image: robots:ros_overlay
    build:
      context: .
      dockerfile: docker/ros/Dockerfile
      target: overlay
    command: sleep infinity

  # ROS Developer container
  ros_dev:
    extends: ros_overlay
    image: robots:ros_dev
    build:
      context: .
      dockerfile: docker/ros/Dockerfile
      target: dev
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
        - USERNAME=${USERNAME:-devuser}
    volumes:
      # Mount the source code
      - ./ros/pathfinder:/overlay_ws/src/pathfinder:rw
      # Mount colcon build artifacts for faster rebuilds
      - ./.colcon/build/:/overlay_ws/build/:rw
      - ./.colcon/install/:/overlay_ws/install/:rw
      - ./.colcon/log/:/overlay_ws/log/:rw
    user: ${USERNAME:-devuser}
    command: sleep infinity

  # RxInfer image
  rxinfer:
    image: robots:rxinfer
    build:
      context: .
      dockerfile: docker/rxinfer/Dockerfile
      target: rxinfer
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
        - USERNAME=${USERNAME:-rxinfer}
    volumes:
      # Mount the source code
      - ./rxinfer:/rxinfer:rw
    user: ${USERNAME:-rxinfer}
    # Interactive shell
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    command: sleep infinity

  # RxInfer Developer container
  rxinfer_pathfinder:
    extends: rxinfer
    image: robots:rxinfer_pathfinder
    command: julia pathfinder/main.jl

  dashboard:
    image: robots:dashboard
    build:
      context: .
      dockerfile: docker/dashboard/Dockerfile
      target: dashboard
    # Interactive shell
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    volumes:
      # Mount the source code
      - ./dashboard:/dashboard:rw
    user: bun
    command: sleep infinity

  # turtlesim demo
  turtlesim:
    image: robots:turtlesim
    extends: ros_overlay
    command: ros2 run turtlesim turtlesim_node
